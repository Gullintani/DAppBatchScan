{"error": null, "issues": [{"address": 3305, "code": "ction implements", "debug": "The exception is triggered under the following conditions:\n\ncalldata_apexSolids_4: 0x6\ncalldata_apexSolids_0: 0xe3fd8c200000000000000000000000000000000000000000000000000000000\ncalldatasize_apexSolids: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/apexONE-1.sol", "function": "getSolid(uint256)", "lineno": 254, "title": "Exception state", "type": "Informational"}, {"address": 3719, "code": "{\n            name: \"Te", "debug": "The exception is triggered under the following conditions:\n\ncalldata_apexSolids_4: 0x6\ncalldata_apexSolids_0: 0x1c60df0600000000000000000000000000000000000000000000000000000000\ncalldatasize_apexSolids: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/apexONE-1.sol", "function": "_function_0x1c60df06", "lineno": 149, "title": "Exception state", "type": "Informational"}, {"address": 5305, "code": "aused\n  m", "debug": "", "description": "Function purchase(uint256,address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/temp/apexONE-1.sol", "function": "purchase(uint256,address)", "lineno": 58, "title": "Use of tx.origin", "type": "Warning"}, {"address": 6956, "code": "e = solid.highPrice ", "debug": "storage_0 + 12 + 6*calldata_apexSolids_4: 0x20\ntimestamp: 0x0\nstorage_4 + 12 + 6*calldata_apexSolids_4: 0x1\ncalldata_apexSolids_4: 0x5\ncalldata_apexSolids_0: 0xe3fd8c200000000000000000000000000000000000000000000000000000000\ncalldatasize_apexSolids: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `getSolid(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/temp/apexONE-1.sol", "function": "getSolid(uint256)", "lineno": 334, "title": "Integer Underflow", "type": "Warning"}, {"address": 7940, "code": "alance){\n         uint256 ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_apexSolids_32_+_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_apexSolids_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_calldata_apexSolids_32_+_36: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_apexSolids_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_apexSolids_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_apexSolids: 0x4\nextcodesize: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/apexONE-1.sol", "function": "transferFrom(address,address,uint256)", "lineno": 478, "title": "Integer Overflow ", "type": "Warning"}], "success": true}
