{"error": null, "issues": [{"address": 676, "code": "s (bool){\n        return (nonFungibleContract.ownerOf(_tokenId) == _claimant);\n    }\n\n    function _escrow(address _owner, uint256 _tokenId) internal{\n        nonFungibleContract.transferFrom(_owner, address(this), _tokenId);\n    }\n\n    function _transfer(address _receiver, uint256 _tokenId) internal{\n        nonFungibleContract.transfer(_receiver, _tokenId);\n    }\n\n    function _addAuction(uint256 _tokenId, Auction _auction) internal{\n        require(_auction.durati", "debug": "calldata_WarriorTokenImpl_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WarriorTokenImpl_0: 0x5071fcf000000000000000000000000000000000000000000000000000000000\ncalldatasize_WarriorTokenImpl: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `recoverSouls(address[],uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Ether_Quest-3.sol", "function": "recoverSouls(address[],uint256[],uint256[])", "lineno": 3765, "title": "Integer Overflow ", "type": "Warning"}, {"address": 700, "code": "s (bool){\n        return (nonFungibleContract.ownerOf(_tokenId) == _claimant);\n    }\n\n    function _escrow(address _owner, uint256 _tokenId) internal{\n        nonFungibleContract.transferFrom(_owner, address(this), _tokenId);\n    }\n\n    function _transfer(address _receiver, uint256 _tokenId) internal{\n        nonFungibleContract.transfer(_receiver, _tokenId);\n    }\n\n    function _addAuction(uint256 _tokenId, Auction _auction) internal{\n        require(_auction.durati", "debug": "calldata_WarriorTokenImpl_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WarriorTokenImpl_0: 0x5071fcf000000000000000000000000000000000000000000000000000000000\ncalldatasize_WarriorTokenImpl: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `recoverSouls(address[],uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Ether_Quest-3.sol", "function": "recoverSouls(address[],uint256[],uint256[])", "lineno": 3765, "title": "Integer Overflow ", "type": "Warning"}, {"address": 706, "code": "s (bool){\n        return (nonFungibleContract.ownerOf(_tokenId) == _claimant);\n    }\n\n    function _escrow(address _owner, uint256 _tokenId) internal{\n        nonFungibleContract.transferFrom(_owner, address(this), _tokenId);\n    }\n\n    function _transfer(address _receiver, uint256 _tokenId) internal{\n        nonFungibleContract.transfer(_receiver, _tokenId);\n    }\n\n    function _addAuction(uint256 _tokenId, Auction _auction) internal{\n        require(_auction.durati", "debug": "calldata_WarriorTokenImpl_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_WarriorTokenImpl_0: 0x5071fcf000000000000000000000000000000000000000000000000000000000\ncalldatasize_WarriorTokenImpl: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `recoverSouls(address[],uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Ether_Quest-3.sol", "function": "recoverSouls(address[],uint256[],uint256[])", "lineno": 3765, "title": "Integer Overflow ", "type": "Warning"}, {"address": 724, "code": "s (bool){\n        return (nonFungibleContract.ownerOf(_tokenId) == _claimant);\n    }\n\n    function _escrow(address _owner, uint256 _tokenId) internal{\n        nonFungibleContract.transferFrom(_owner, address(this), _tokenId);\n    }\n\n    function _transfer(address _receiver, uint256 _tokenId) internal{\n        nonFungibleContract.transfer(_receiver, _tokenId);\n    }\n\n    function _addAuction(uint256 _tokenId, Auction _auction) internal{\n        require(_auction.durati", "debug": "calldata_WarriorTokenImpl_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WarriorTokenImpl_0: 0x5071fcf000000000000000000000000000000000000000000000000000000000\ncalldatasize_WarriorTokenImpl: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `recoverSouls(address[],uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Ether_Quest-3.sol", "function": "recoverSouls(address[],uint256[],uint256[])", "lineno": 3765, "title": "Integer Overflow ", "type": "Warning"}, {"address": 730, "code": "s (bool){\n        return (nonFungibleContract.ownerOf(_tokenId) == _claimant);\n    }\n\n    function _escrow(address _owner, uint256 _tokenId) internal{\n        nonFungibleContract.transferFrom(_owner, address(this), _tokenId);\n    }\n\n    function _transfer(address _receiver, uint256 _tokenId) internal{\n        nonFungibleContract.transfer(_receiver, _tokenId);\n    }\n\n    function _addAuction(uint256 _tokenId, Auction _auction) internal{\n        require(_auction.durati", "debug": "calldata_WarriorTokenImpl_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_WarriorTokenImpl_0: 0x5071fcf000000000000000000000000000000000000000000000000000000000\ncalldatasize_WarriorTokenImpl: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `recoverSouls(address[],uint256[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Ether_Quest-3.sol", "function": "recoverSouls(address[],uint256[],uint256[])", "lineno": 3765, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1708, "code": "(_tokenId), _auction.seller, _auction.startingPr", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/Ether_Quest-3.sol", "function": "burnWarrior(uint256)", "lineno": 3782, "title": "Message call to external contract", "type": "Informational"}, {"address": 1803, "code": "tion _cancelAuction(uint25", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1708: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncalldata_WarriorTokenImpl_0: 0x9fc3c5300000000000000000000000000000000000000000000000000000000\ncalldatasize_WarriorTokenImpl: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `burnWarrior(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Ether_Quest-3.sol", "function": "burnWarrior(uint256)", "lineno": 3785, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1807, "code": "tion _cancelAuction(uint25", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/Ether_Quest-3.sol", "function": "burnWarrior(uint256)", "lineno": 3785, "title": "State change after external call", "type": "Warning"}, {"address": 1938, "code": "12] == 6);//check background", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WarriorTokenImpl_4: 0x13\ncalldata_WarriorTokenImpl_0: 0x2a4a9dd100000000000000000000000000000000000000000000000000000000\ncalldatasize_WarriorTokenImpl: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/Ether_Quest-3.sol", "function": "_function_0x2a4a9dd1", "lineno": 3647, "title": "Exception state", "type": "Informational"}], "success": true}
