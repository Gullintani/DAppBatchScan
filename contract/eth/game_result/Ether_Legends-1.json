{"error": null, "issues": [{"address": 751, "code": "numberOfCards = _min(msg.value / pricePerCard, (gasleft() - 100000) / 200000);\n    uint256 totalEl", "debug": "storage_6: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_ReentrancyGuard_0: 0x52a3fdbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_ReentrancyGuard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getCardTypeIds()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Ether_Legends-1.sol", "function": "getCardTypeIds()", "lineno": 499, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2174, "code": "e;\n\n  // Address w", "debug": "calldatasize_ReentrancyGuard: 0x200\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ReentrancyGuard_0: 0xbc26f3f000000000000000000000000000000000000000000000000000000000\n", "description": "A possible integer overflow exists in the function `purchaseCards(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Ether_Legends-1.sol", "function": "purchaseCards(address)", "lineno": 390, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2189, "code": ") {\n     ", "debug": "", "description": "Function purchaseCards(address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/temp/Ether_Legends-1.sol", "function": "purchaseCards(address)", "lineno": 502, "title": "Use of tx.origin", "type": "Warning"}, {"address": 2878, "code": "ToReturn += cardTo", "debug": "storage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x1869f\nstorage_7: 0xffff00\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\norigin: 0x0\ncaller: 0x0\ncalldatasize_ReentrancyGuard: 0x3\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/temp/Ether_Legends-1.sol", "function": "fallback", "lineno": 508, "title": "Integer Underflow", "type": "Warning"}, {"address": 3317, "code": "ansferFrom(funder, beneficiary, elementeumThatCanBeRetur", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/Ether_Legends-1.sol", "function": "fallback", "lineno": 516, "title": "Message call to external contract", "type": "Informational"}, {"address": 3317, "code": "ansferFrom(funder, beneficiary, elementeumThatCanBeRetur", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4564\nCall at address: 4484\nCall at address: 3679\nCall at address: 3317\n", "filename": "/temp/Ether_Legends-1.sol", "function": "fallback", "lineno": 516, "title": "Multiple Calls", "type": "Information"}, {"address": 3384, "code": "mount to be refunded as", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/Ether_Legends-1.sol", "function": "fallback", "lineno": 520, "title": "State change after external call", "type": "Warning"}, {"address": 3679, "code": ".sender.transfer(change);\n    }\n  }\n\n  function ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3959\n", "filename": "/temp/Ether_Legends-1.sol", "function": "fallback", "lineno": 524, "title": "Multiple Calls", "type": "Information"}, {"address": 4484, "debug": "", "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.number\n", "filename": "/temp/Ether_Legends-1.sol", "function": "fallback", "lineno": 535, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 4484, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4564\n", "filename": "/temp/Ether_Legends-1.sol", "function": "fallback", "lineno": 535, "title": "Multiple Calls", "type": "Information"}, {"address": 4484, "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/Ether_Legends-1.sol", "function": "fallback", "lineno": 535, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4564, "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/Ether_Legends-1.sol", "function": "fallback", "lineno": 535, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5118, "code": " payeeWallet;\n    funder = f", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_ReentrancyGuard: 0xa0\ncalldata_ReentrancyGuard_4: 0x0\nstorage_6: 0x0\ncalldata_ReentrancyGuard_0: 0x42c679f200000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/Ether_Legends-1.sol", "function": "_function_0x42c679f2", "lineno": 413, "title": "Exception state", "type": "Informational"}, {"address": 5207, "code": "00);\n    uint256 t", "debug": "storage_6: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_ReentrancyGuard_0: 0x52a3fdbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_ReentrancyGuard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getCardTypeIds()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Ether_Legends-1.sol", "function": "getCardTypeIds()", "lineno": 499, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5209, "code": "00);\n    uint256 t", "debug": "storage_6: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_ReentrancyGuard_0: 0x52a3fdbe00000000000000000000000000000000000000000000000000000000\ncalldatasize_ReentrancyGuard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getCardTypeIds()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Ether_Legends-1.sol", "function": "getCardTypeIds()", "lineno": 499, "title": "Integer Overflow ", "type": "Warning"}], "success": true}
