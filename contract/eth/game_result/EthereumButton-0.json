{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/temp/EthereumButton-0.sol:25:5: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use \"constructor(...) { ... }\" to define it.\n    function EthereumButton() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/temp/EthereumButton-0.sol:1:1: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.5.11;\"\ncontract EthereumButton {\r\n^ (Relevant source part starts here and spans across multiple lines).\n/temp/EthereumButton-0.sol:25:5: Warning: This declaration shadows an existing declaration.\n    function EthereumButton() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/temp/EthereumButton-0.sol:1:1: The shadowed declaration is here:\ncontract EthereumButton {\r\n^ (Relevant source part starts here and spans across multiple lines).\n/temp/EthereumButton-0.sol:36:5: Error: Fallback function must be defined as \"external\".\n    function() public payable {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/temp/EthereumButton-0.sol:33:23: Error: Type int_const 0 is not implicitly convertible to expected type address.\n        lastPresser = 0x0;\r\n                      ^-^\n/temp/EthereumButton-0.sol:47:9: Error: Event invocations have to be prefixed by \"emit\".\n        Pressed(msg.sender, now);\r\n        ^----------------------^\n/temp/EthereumButton-0.sol:73:9: Error: \"send\" and \"transfer\" are only available for objects of type \"address payable\", not \"address\".\n        lastPresser.transfer(amount);\r\n        ^------------------^\n", "issues": []}
