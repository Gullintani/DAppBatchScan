{"error": null, "issues": [{"address": 1669, "code": "  ret", "debug": "storage_2: 0x5e28209f1404441a9e0000001118310b735b8fa02b6da7c7600e032c1861dfff\ncallvalue: 0x8175d26009d13ab4617fffffef2382f0c8c0781dc510103c27f0c133e58c6000\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nblock_number: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1956: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TheNextBlock_0: 0x3099689700000000000000000000000000000000000000000000000000000000\ncalldatasize_TheNextBlock: 0x4\n", "description": "A possible integer overflow exists in the function `placeBet(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/TheNextBlock-0.sol", "function": "placeBet(address)", "lineno": 32, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1682, "code": "  }\n}\n\n/**\n * ", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x63278212101118068834271c6508c04292b2012f2e52d8d2816a2fe2bfc1955b\ncallvalue: 0x8e94a8f04ce083e14202a8878a483f977248224002a7a30dfe44a01c003e1680\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nblock_number: 0x0\nstorage_1 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1956: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TheNextBlock_0: 0x3099689700000000000000000000000000000000000000000000000000000000\ncalldatasize_TheNextBlock: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/TheNextBlock-0.sol", "function": "placeBet(address)", "lineno": 33, "title": "Exception state", "type": "Informational"}, {"address": 3581, "code": ".addr.transfer(balance);\n   ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawMyFunds(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/TheNextBlock-0.sol", "function": "withdrawMyFunds()", "lineno": 194, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3886, "code": "uint256) {\n        return pr", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawOwnersFunds(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/TheNextBlock-0.sol", "function": "withdrawOwnersFunds()", "lineno": 201, "title": "Transaction order dependence", "type": "Warning"}], "success": true}
