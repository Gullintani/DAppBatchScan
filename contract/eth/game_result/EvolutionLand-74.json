{"error": null, "issues": [{"address": 886, "code": "er(address(this).balance);\n            return;\n        }\n\n        ERC20 token = ERC20(_t", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EvolutionLand-74.sol", "function": "fallback", "lineno": 601, "title": "Message call to external contract", "type": "Informational"}, {"address": 886, "code": "er(address(this).balance);\n            return;\n        }\n\n        ERC20 token = ERC20(_t", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/EvolutionLand-74.sol", "function": "fallback", "lineno": 601, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4451, "code": " }\n\n}\n\ncontrac", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/EvolutionLand-74.sol", "function": "stop()", "lineno": 95, "title": "State change after external call", "type": "Warning"}, {"address": 4758, "code": "ves `_spender` to send `_amount` tokens on\n    ///  its behalf, and ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EvolutionLand-74.sol", "function": "approve(address,uint256)", "lineno": 546, "title": "Message call to external contract", "type": "Informational"}, {"address": 4758, "code": "ves `_spender` to send `_amount` tokens on\n    ///  its behalf, and ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/EvolutionLand-74.sol", "function": "approve(address,uint256)", "lineno": 546, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5191, "code": "    @param _newOwner    ", "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x0\ncalldata_TokenController_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/EvolutionLand-74.sol", "function": "transferFrom(address,address,uint256)", "lineno": 392, "title": "Exception state", "type": "Informational"}, {"address": 5492, "code": "erts the token controller of the transfer\n        if (isCon", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EvolutionLand-74.sol", "function": "transferFrom(address,address,uint256)", "lineno": 476, "title": "Message call to external contract", "type": "Informational"}, {"address": 5492, "code": "erts the token controller of the transfer\n        if (isCon", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/EvolutionLand-74.sol", "function": "transferFrom(address,address,uint256)", "lineno": 476, "title": "Transaction order dependence", "type": "Warning"}, {"address": 11261, "code": "}\n\ncontract DSNote {\n    event Lo", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EvolutionLand-74.sol", "function": "_function_0x5e35359e", "lineno": 55, "title": "Message call to external contract", "type": "Informational"}, {"address": 13448, "code": " y) /", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_TokenController_32 + 36: 0x1\ncaller: 0x0\ncalldata_TokenController_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\nstorage_10: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_8: 0xff00\ncalldata_TokenController_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\nextcodesize: 0x0\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/temp/EvolutionLand-74.sol", "function": "transferFrom(address,address,uint256)", "lineno": 124, "title": "Integer Underflow", "type": "Warning"}, {"address": 13600, "code": " standard token precision. overri", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/EvolutionLand-74.sol", "function": "approve(address,uint256)", "lineno": 237, "title": "State change after external call", "type": "Warning"}], "success": true}
