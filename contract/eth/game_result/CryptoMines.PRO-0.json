{"error": null, "issues": [{"address": 2178, "code": "sources {\n    //ResoursId->", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0x0\ncaller: 0x0\ncalldata_Trading_0: 0x6103d70b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trading: 0x4\nretval_2166: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/CryptoMines.PRO-0.sol", "function": "withdrawPayments()", "lineno": 60, "title": "Exception state", "type": "Informational"}, {"address": 2628, "code": "lvl<=12) \n\t\t\t    createNewMine(lvl);\n\t\t}\n\t\t\n\t\tMineLev", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x49\nstorage_keccac_calldata_Trading_4: 0x200\ncaller: 0x2\ncalldata_Trading_0: 0x65b70e4500000000000000000000000000000000000000000000000000000000\ncalldatasize_Trading: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `UpMineLVL(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/temp/CryptoMines.PRO-0.sol", "function": "UpMineLVL(uint256)", "lineno": 130, "title": "Integer Underflow", "type": "Warning"}, {"address": 2824, "code": "ourceId;\n      ", "debug": "storage_keccac_calldata_Trading_4: 0x100\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1e\ncaller: 0x1\ncalldata_Trading_0: 0x65b70e4500000000000000000000000000000000000000000000000000000000\ncalldatasize_Trading: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `UpMineLVL(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/CryptoMines.PRO-0.sol", "function": "UpMineLVL(uint256)", "lineno": 145, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3187, "code": "sourceId>0) {\n\t\t", "debug": "storage_18: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3 + keccac_calldata_Trading_4: 0xffffffffffffffffffffffffffffffff00\ncaller: 0x0\nstorage_0 + keccac_calldata_Trading_4: 0x0\ncalldata_Trading_32 + 4: 0xffffffffffffffffffffffffffffffff\ncalldata_Trading_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Trading_0: 0x6f479f5700000000000000000000000000000000000000000000000000000000\ncalldatasize_Trading: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `changeSellingPrice(uint256,uint128)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/CryptoMines.PRO-0.sol", "function": "changeSellingPrice(uint256,uint128)", "lineno": 215, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4508, "code": "er && Tra", "debug": "storage_17: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Trading_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Trading_32 + 68: 0xffffffffffffffffffffffffffffffff\ncalldata_Trading_4: 0xff\ncalldata_Trading_0: 0x924dd50a00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trading: 0x4\ncalldata_Trading_32 + 36: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `startSelling(uint8,uint256,uint256,uint128)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/CryptoMines.PRO-0.sol", "function": "startSelling(uint8,uint256,uint256,uint128)", "lineno": 189, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4902, "code": "deId);\t\t\n\t\tnextTradeEvent++;\n\t}\n\t\n    function changeSellingPrice(uint256 _Trad", "debug": "storage_1 + keccac_calldata_Trading_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_0_+_keccac_calldata_Trading_4,_256): 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_0 + keccac_calldata_Trading_4: 0xff00\nstorage_3 + keccac_calldata_Trading_4: 0xffffffffffffffffffffffffffffffff00\ncaller: 0xff\ncalldata_Trading_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Trading_0: 0xa5f128fb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trading: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `stopSelling(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/CryptoMines.PRO-0.sol", "function": "stopSelling(uint256)", "lineno": 196, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5070, "code": "require (TradeLo", "debug": "storage_18: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0 + keccac_calldata_Trading_4: 0xff00\nstorage_3 + keccac_calldata_Trading_4: 0xffffffffffffffffffffffffffffffff00\ncaller: 0xff\ncalldata_Trading_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Trading_0: 0xa5f128fb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trading: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `stopSelling(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/CryptoMines.PRO-0.sol", "function": "stopSelling(uint256)", "lineno": 203, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5315, "code": "\trequire ( (_sellResourceI", "debug": "calldata_Trading_4: 0xd\ncallvalue: 0xfeffc000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_6,_256): 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\n256_EXP_16*Concat(0, 1 + Extract(0, 0, calldata_Trading_4)): 0x1\nstorage_Concat(0,\n       Extract(7,\n               1,\n               255 + Extract(7, 0, calldata_Trading_4))) +\n10: 0xfeffc000000000000000000000000000\ncalldata_Trading_0: 0xc144d7dc00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trading: 0x4\n", "description": "A possible integer overflow exists in the function `buyMine(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/CryptoMines.PRO-0.sol", "function": "buyMine(uint8)", "lineno": 169, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5345, "code": " TradeId);\n\t\n  \tfunction buyM", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Trading_4: 0xd\ncalldata_Trading_0: 0xdf133cf900000000000000000000000000000000000000000000000000000000\ncalldatasize_Trading: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/CryptoMines.PRO-0.sol", "function": "_function_0xdf133cf9", "lineno": 157, "title": "Exception state", "type": "Informational"}, {"address": 6855, "code": "\n\t    uint25", "debug": "calldata_Trading_4: 0x1\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Trading_0: 0xc144d7dc00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trading: 0x4\nstorage_Concat(0,\n       Extract(7,\n               1,\n               255 + Extract(7, 0, calldata_Trading_4))) +\n10: 0x0\n256_EXP_16*Concat(0, 1 + Extract(0, 0, calldata_Trading_4)): 0x0\ncallvalue: 0xffffffffffffffffffffffffffffffff\n", "description": "A possible integer overflow exists in the function `buyMine(uint8)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/CryptoMines.PRO-0.sol", "function": "buyMine(uint8)", "lineno": 82, "title": "Integer Overflow ", "type": "Warning"}], "success": true}
