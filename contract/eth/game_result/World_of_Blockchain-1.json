{"error": null, "issues": [{"address": 466, "code": " \n        NFTtoken memory _NFTtoken = allNFTtokens[_tokenIndex];\n        \n        attribute = _NFTtoken.attribute;\n        birthTime = _NFTtoken.birthTime;\n        status = isNFTAlive[_tokenId];\n    }\n        \n    function setNFTbyTokenId(uint256 _tokenId, string attribute, bool status)external onlyOwner{\n        \n        require(exists(_tokenId));\n        require(isNFTAlive[_tokenId] == true);    \n        uint256 _tokenIndex = tokdenIdToNFTindex[_tokenId];\n        \n        NFTtoken storage _NFTtoken = allNFTtokens[_tokenIndex];\n\n        _NFTtoken.attribute = attribute;\n        isNFTAlive[_tokenId] = status;\n        \n        emit SetNFTbyTokenId(_tokenId, status);\n    }\n\n\tfunction myTokens(ad", "debug": "calldata_WOBCore_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WOBCore_0: 0x3a76fed00000000000000000000000000000000000000000000000000000000\ncalldatasize_WOBCore: 0x4\n", "description": "A possible integer overflow exists in the function `_function_0x03a76fed`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/World_of_Blockchain-1.sol", "function": "_function_0x03a76fed", "lineno": 936, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1081, "debug": "calldata_WOBCore_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WOBCore_0: 0x162094c400000000000000000000000000000000000000000000000000000000\ncalldatasize_WOBCore: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setTokenURI(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/World_of_Blockchain-1.sol", "function": "setTokenURI(uint256,string)", "lineno": 971, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3429, "code": ";\n\t\n\t/*\n\tERC721 as", "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WOBCore_4 + calldata_WOBCore_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_15: 0x0\ncaller: 0x0\ncalldata_WOBCore_0: 0x3a76fed00000000000000000000000000000000000000000000000000000000\ncalldatasize_WOBCore: 0x4\n", "description": "A possible integer overflow exists in the function `_function_0x03a76fed`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/World_of_Blockchain-1.sol", "function": "_function_0x03a76fed", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4235, "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_calldata_WOBCore_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WOBCore_0: 0xdbedee700000000000000000000000000000000000000000000000000000000\ncalldatasize_WOBCore: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/World_of_Blockchain-1.sol", "function": "getNFTbyTokenId(uint256)", "lineno": 971, "title": "Exception state", "type": "Informational"}, {"address": 10384, "code": "           \n            NFTtoken memory _NFTtoken = NFTtoken({\n                attribute: \"\",\n                birthTime: uint64(now)\n            });\n            \n            isNFTAlive[_tokenId] = true;\n    \n            tokdenIdToNFTindex[_tokenId] = allNFTtokens.length;\n            allNFTtokens.push(_NFTtoken);\n            \n\t\t    _mint(_tokenOwner, _tokenId);\n\t\t    emit BoughtToken(_tokenOwner, _tokenId);\n        }\n\t  }\n\t  \n    function getNFTbyTokenId(uint256 _tokenId) external view returns(string attribute, uint256 birthTime, bool status){\n\n        require(exists(_tokenId));\n        uint256 _tokenIndex = tokdenIdToNFTindex[_tokenId];\n        \n        NFTtoken memory _NFTtoken = allNFTtokens[_tokenIndex];\n        \n        attribute = _NFTtoken.attribute;\n        birthTime = _NFTtoken.birthTime;\n        status = isNFTAlive[_tokenId];\n    }\n        \n    function setNFTbyTokenId(uint256 _tokenId, string attribute, bool status)external onlyOwner{\n        \n        require(exists(_tokenId));\n        require(isNFTAlive[_tokenId] == true);    \n        uint256 _tokenIndex = tokdenIdToNFTindex[_tokenId];\n        \n        NFTtoken storage _NFTtoken = allNFTtokens[_tokenIndex];\n\n        _NFTtoken.attribute = attribute;\n        isNFTAlive[_tokenId] = status;\n        \n        emit SetNFTbyTokenId(_tokenId, status);\n    }\n\n\tfunction myTokens(address _owner)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t  uint256[]\n\t\t)\n\t  {\n\t\treturn ownedTokens[_owner];\n\t  }\n\t  \n\tfunction setTokenURI(uint256 _tokenId, string _uri) public onlyOwner {\n\t\tsuper._setTokenURI(_tokenId, _uri);\n\t  }\n}", "debug": "keccac_0_+\n75276140696391174450305814049576319106646922510300487059720162673006384432776_+\n2*storage_7: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_0 +\n75276140696391174450305814049576319106646922510300487059720162673006384432776 +\n2*storage_7: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\ncalldata_WOBCore_4 + calldata_WOBCore_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_15: 0x0\ncaller: 0x0\ncalldata_WOBCore_0: 0x3a76fed00000000000000000000000000000000000000000000000000000000\ncalldatasize_WOBCore: 0x4\n", "description": "A possible integer overflow exists in the function `_function_0x03a76fed`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/World_of_Blockchain-1.sol", "function": "_function_0x03a76fed", "lineno": 916, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10640, "code": "           \n            NFTtoken memory _NFTtoken = NFTtoken({\n                attribute: \"\",\n                birthTime: uint64(now)\n            });\n            \n            isNFTAlive[_tokenId] = true;\n    \n            tokdenIdToNFTindex[_tokenId] = allNFTtokens.length;\n            allNFTtokens.push(_NFTtoken);\n            \n\t\t    _mint(_tokenOwner, _tokenId);\n\t\t    emit BoughtToken(_tokenOwner, _tokenId);\n        }\n\t  }\n\t  \n    function getNFTbyTokenId(uint256 _tokenId) external view returns(string attribute, uint256 birthTime, bool status){\n\n        require(exists(_tokenId));\n        uint256 _tokenIndex = tokdenIdToNFTindex[_tokenId];\n        \n        NFTtoken memory _NFTtoken = allNFTtokens[_tokenIndex];\n        \n        attribute = _NFTtoken.attribute;\n        birthTime = _NFTtoken.birthTime;\n        status = isNFTAlive[_tokenId];\n    }\n        \n    function setNFTbyTokenId(uint256 _tokenId, string attribute, bool status)external onlyOwner{\n        \n        require(exists(_tokenId));\n        require(isNFTAlive[_tokenId] == true);    \n        uint256 _tokenIndex = tokdenIdToNFTindex[_tokenId];\n        \n        NFTtoken storage _NFTtoken = allNFTtokens[_tokenIndex];\n\n        _NFTtoken.attribute = attribute;\n        isNFTAlive[_tokenId] = status;\n        \n        emit SetNFTbyTokenId(_tokenId, status);\n    }\n\n\tfunction myTokens(address _owner)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t  uint256[]\n\t\t)\n\t  {\n\t\treturn ownedTokens[_owner];\n\t  }\n\t  \n\tfunction setTokenURI(uint256 _tokenId, string _uri) public onlyOwner {\n\t\tsuper._setTokenURI(_tokenId, _uri);\n\t  }\n}", "debug": "keccac_keccac_calldata_WOBCore_4: 0xfe180ac200207ffffffffffc0000000000000000000000000000000000000806\nstorage_keccac_calldata_WOBCore_4: 0xd8900a4eadc00000000000ffffffffffffffffffffffffffffffffffffffffe1\nstorage_15: 0x0\ncaller: 0x0\ncalldata_WOBCore_0: 0x162094c400000000000000000000000000000000000000000000000000000000\ncalldatasize_WOBCore: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setTokenURI(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/World_of_Blockchain-1.sol", "function": "setTokenURI(uint256,string)", "lineno": 916, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10669, "code": "           \n            NFTtoken memory _NFTtoken = NFTtoken({\n                attribute: \"\",\n                birthTime: uint64(now)\n            });\n            \n            isNFTAlive[_tokenId] = true;\n    \n            tokdenIdToNFTindex[_tokenId] = allNFTtokens.length;\n            allNFTtokens.push(_NFTtoken);\n            \n\t\t    _mint(_tokenOwner, _tokenId);\n\t\t    emit BoughtToken(_tokenOwner, _tokenId);\n        }\n\t  }\n\t  \n    function getNFTbyTokenId(uint256 _tokenId) external view returns(string attribute, uint256 birthTime, bool status){\n\n        require(exists(_tokenId));\n        uint256 _tokenIndex = tokdenIdToNFTindex[_tokenId];\n        \n        NFTtoken memory _NFTtoken = allNFTtokens[_tokenIndex];\n        \n        attribute = _NFTtoken.attribute;\n        birthTime = _NFTtoken.birthTime;\n        status = isNFTAlive[_tokenId];\n    }\n        \n    function setNFTbyTokenId(uint256 _tokenId, string attribute, bool status)external onlyOwner{\n        \n        require(exists(_tokenId));\n        require(isNFTAlive[_tokenId] == true);    \n        uint256 _tokenIndex = tokdenIdToNFTindex[_tokenId];\n        \n        NFTtoken storage _NFTtoken = allNFTtokens[_tokenIndex];\n\n        _NFTtoken.attribute = attribute;\n        isNFTAlive[_tokenId] = status;\n        \n        emit SetNFTbyTokenId(_tokenId, status);\n    }\n\n\tfunction myTokens(address _owner)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t  uint256[]\n\t\t)\n\t  {\n\t\treturn ownedTokens[_owner];\n\t  }\n\t  \n\tfunction setTokenURI(uint256 _tokenId, string _uri) public onlyOwner {\n\t\tsuper._setTokenURI(_tokenId, _uri);\n\t  }\n}", "debug": "calldata_WOBCore_4 + calldata_WOBCore_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_calldata_WOBCore_4: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_15: 0x0\ncaller: 0x0\ncalldata_WOBCore_0: 0x162094c400000000000000000000000000000000000000000000000000000000\ncalldatasize_WOBCore: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setTokenURI(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/World_of_Blockchain-1.sol", "function": "setTokenURI(uint256,string)", "lineno": 916, "title": "Integer Overflow ", "type": "Warning"}, {"address": 10683, "code": "           \n            NFTtoken memory _NFTtoken = NFTtoken({\n                attribute: \"\",\n                birthTime: uint64(now)\n            });\n            \n            isNFTAlive[_tokenId] = true;\n    \n            tokdenIdToNFTindex[_tokenId] = allNFTtokens.length;\n            allNFTtokens.push(_NFTtoken);\n            \n\t\t    _mint(_tokenOwner, _tokenId);\n\t\t    emit BoughtToken(_tokenOwner, _tokenId);\n        }\n\t  }\n\t  \n    function getNFTbyTokenId(uint256 _tokenId) external view returns(string attribute, uint256 birthTime, bool status){\n\n        require(exists(_tokenId));\n        uint256 _tokenIndex = tokdenIdToNFTindex[_tokenId];\n        \n        NFTtoken memory _NFTtoken = allNFTtokens[_tokenIndex];\n        \n        attribute = _NFTtoken.attribute;\n        birthTime = _NFTtoken.birthTime;\n        status = isNFTAlive[_tokenId];\n    }\n        \n    function setNFTbyTokenId(uint256 _tokenId, string attribute, bool status)external onlyOwner{\n        \n        require(exists(_tokenId));\n        require(isNFTAlive[_tokenId] == true);    \n        uint256 _tokenIndex = tokdenIdToNFTindex[_tokenId];\n        \n        NFTtoken storage _NFTtoken = allNFTtokens[_tokenIndex];\n\n        _NFTtoken.attribute = attribute;\n        isNFTAlive[_tokenId] = status;\n        \n        emit SetNFTbyTokenId(_tokenId, status);\n    }\n\n\tfunction myTokens(address _owner)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t  uint256[]\n\t\t)\n\t  {\n\t\treturn ownedTokens[_owner];\n\t  }\n\t  \n\tfunction setTokenURI(uint256 _tokenId, string _uri) public onlyOwner {\n\t\tsuper._setTokenURI(_tokenId, _uri);\n\t  }\n}", "debug": "calldata_WOBCore_4 + calldata_WOBCore_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_keccac_calldata_WOBCore_4: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_15: 0x0\ncaller: 0x0\ncalldata_WOBCore_0: 0x162094c400000000000000000000000000000000000000000000000000000000\ncalldatasize_WOBCore: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setTokenURI(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/World_of_Blockchain-1.sol", "function": "setTokenURI(uint256,string)", "lineno": 916, "title": "Integer Overflow ", "type": "Warning"}], "success": true}
