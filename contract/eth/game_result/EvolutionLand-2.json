{"error": null, "issues": [{"address": 798, "code": "token == 0x0) {\n            address(msg.sender).transfer(address(this).balance);\n       ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EvolutionLand-2.sol", "function": "fallback", "lineno": 539, "title": "Message call to external contract", "type": "Informational"}, {"address": 798, "code": "token == 0x0) {\n            address(msg.sender).transfer(address(this).balance);\n       ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/EvolutionLand-2.sol", "function": "fallback", "lineno": 539, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3895, "code": " }\n\n}\n\ncontrac", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/EvolutionLand-2.sol", "function": "stop()", "lineno": 95, "title": "State change after external call", "type": "Warning"}, {"address": 4202, "code": "       _supply = sub(_supply, _amount);\n        emit Burn(_from, _am", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EvolutionLand-2.sol", "function": "approve(address,uint256)", "lineno": 469, "title": "Message call to external contract", "type": "Informational"}, {"address": 4202, "code": "       _supply = sub(_supply, _amount);\n        emit Burn(_from, _am", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/EvolutionLand-2.sol", "function": "approve(address,uint256)", "lineno": 469, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4825, "code": "blic\n        returns (bool success)\n    {\n        // Alerts", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EvolutionLand-2.sol", "function": "transferFrom(address,address,uint256)", "lineno": 401, "title": "Message call to external contract", "type": "Informational"}, {"address": 4825, "code": "blic\n        returns (bool success)\n    {\n        // Alerts", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/EvolutionLand-2.sol", "function": "transferFrom(address,address,uint256)", "lineno": 401, "title": "Transaction order dependence", "type": "Warning"}, {"address": 9626, "code": "}\n\ncontract DSNote {\n    event Lo", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EvolutionLand-2.sol", "function": "_function_0x7a9e5e4b", "lineno": 55, "title": "Message call to external contract", "type": "Informational"}, {"address": 9626, "code": "}\n\ncontract DSNote {\n    event Lo", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0x7a9e5e4b. The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/EvolutionLand-2.sol", "function": "_function_0x7a9e5e4b", "lineno": 55, "title": "Transaction order dependence", "type": "Warning"}, {"address": 11785, "code": " y) /", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_TokenController_32 + 36: 0x1\ncaller: 0x0\ncalldata_TokenController_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\nstorage_8: 0x0\ncalldata_TokenController_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/temp/EvolutionLand-2.sol", "function": "transferFrom(address,address,uint256)", "lineno": 124, "title": "Integer Underflow", "type": "Warning"}, {"address": 11937, "code": " standard token precision. overri", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/EvolutionLand-2.sol", "function": "approve(address,uint256)", "lineno": 237, "title": "State change after external call", "type": "Warning"}], "success": true}
