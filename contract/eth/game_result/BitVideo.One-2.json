{"error": null, "issues": [{"address": 608, "code": "deoCoin() DetailedERC20('BitVideo Coin', 'BTVC', 6) public {\n    totalSupply_ = 100000000;\n    balances[msg.sender] = tota", "debug": "storage_1: 0x800000000000000000000000000000000000000000000000000000000000000\nstorage_80084422859880547211683076133703299733277748156566366325829078699459944778998: 0x0\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_VideoTrusted_0: 0xf11be7c100000000000000000000000000000000000000000000000000000000\ncalldatasize_VideoTrusted: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTrustedContracts()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/BitVideo.One-2.sol", "function": "getTrustedContracts()", "lineno": 302, "title": "Integer Overflow ", "type": "Warning"}, {"address": 935, "code": "d when an old trusted contract is", "debug": "The exception is triggered under the following conditions:\n\ncalldata_VideoTrusted_4: 0x0\nstorage_1: 0x0\ncalldata_VideoTrusted_0: 0x38ea8bbc00000000000000000000000000000000000000000000000000000000\ncalldatasize_VideoTrusted: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/BitVideo.One-2.sol", "function": "_function_0x38ea8bbc", "lineno": 246, "title": "Exception state", "type": "Informational"}, {"address": 1776, "code": "  balances[msg.sender] ", "debug": "storage_1: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\nstorage_80084422859880547211683076133703299733277748156566366325829078699459944778998: 0x0\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_VideoTrusted_0: 0xf11be7c100000000000000000000000000000000000000000000000000000000\ncalldatasize_VideoTrusted: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTrustedContracts()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/BitVideo.One-2.sol", "function": "getTrustedContracts()", "lineno": 304, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1778, "code": "  balances[msg.sender] ", "debug": "storage_1: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\nstorage_80084422859880547211683076133703299733277748156566366325829078699459944778998: 0x0\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_VideoTrusted_0: 0xf11be7c100000000000000000000000000000000000000000000000000000000\ncalldatasize_VideoTrusted: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTrustedContracts()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/BitVideo.One-2.sol", "function": "getTrustedContracts()", "lineno": 304, "title": "Integer Overflow ", "type": "Warning"}], "success": true}
