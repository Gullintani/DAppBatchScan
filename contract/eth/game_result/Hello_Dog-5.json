{"error": null, "issues": [{"address": 1302, "code": " _totalSupply) public returns", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/Hello_Dog-5.sol", "function": "setLotteryAddress(address)", "lineno": 132, "title": "Message call to external contract", "type": "Warning"}, {"address": 1433, "code": "      require(msg.sender ==", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/Hello_Dog-5.sol", "function": "setLotteryAddress(address)", "lineno": 133, "title": "State change after external call", "type": "Warning"}, {"address": 1833, "code": " \n    function callBackVariations()", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncalldata_Variation_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_Variation_0: 0x2d0b7d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/Hello_Dog-5.sol", "function": "registerVariation(uint256,address)", "lineno": 149, "title": "Exception state", "type": "Informational"}, {"address": 1859, "code": ";\n\ncontract Ownabl", "debug": "storage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa\nstorage_2 +\n62514009886607029107290561805838585334079798074568712924583230797734656856471 +\n4*storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Variation_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_Variation_0: 0x2d0b7d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerVariation(uint256,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Hello_Dog-5.sol", "function": "registerVariation(uint256,address)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1941, "code": ";\n\ncontract Ownabl", "debug": "storage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa\nstorage_1 +\n62514009886607029107290561805838585334079798074568712924583230797734656856471 +\n4*storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Variation_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_Variation_0: 0x2d0b7d5300000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `registerVariation(uint256,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Hello_Dog-5.sol", "function": "registerVariation(uint256,address)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2216, "code": "ations[cVariations.length - 2].luck", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncalldata_Variation_0: 0x675f6d1e00000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/Hello_Dog-5.sol", "function": "callBackVariations()", "lineno": 155, "title": "Exception state", "type": "Informational"}, {"address": 2508, "code": "               cVariations[cVariations.length - 2].totalAmount, \n                cVariations[cVariations.length - 2].withdrawBlock\n            );\n            return;\n        }\n        require(msg.sender == dogCore.cooAddress() || msg.sender == owner);\n\n        CVariation storage currentCVariation = cV", "debug": "storage_4: 0xe000000000000000000000000000000000000000000000000000000000000001\nstorage_2 +\n62514009886607029107290561805838585334079798074568712924583230797734656856467 +\n4*storage_4: 0x842108421084210842108420f7c000000000000000000000000000000000001f\nblock_number: 0x0\nstorage_3 +\n62514009886607029107290561805838585334079798074568712924583230797734656856471 +\n4*storage_4: 0x1\ncalldata_Variation_0: 0x675f6d1e00000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `callBackVariations()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Hello_Dog-5.sol", "function": "callBackVariations()", "lineno": 157, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2510, "code": "               cVariations[cVariations.length - 2].totalAmount, \n                cVariations[cVariations.length - 2].withdrawBlock\n            );\n            return;\n        }\n        require(msg.sender == dogCore.cooAddress() || msg.sender == owner);\n\n        CVariation storage currentCVariation = cV", "debug": "storage_4: 0xfffffffffffffffffffffffffffff00000000000000000000000000000000000\nstorage_2 +\n62514009886607029107290561805838585334079798074568712924583230797734656856467 +\n4*storage_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nblock_number: 0x0\nstorage_3 +\n62514009886607029107290561805838585334079798074568712924583230797734656856471 +\n4*storage_4: 0x1\ncalldata_Variation_0: 0x675f6d1e00000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `callBackVariations()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Hello_Dog-5.sol", "function": "callBackVariations()", "lineno": 157, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2571, "code": "               cVariations[cVariations.length - 2].totalAmount, \n                cVariations[cVariations.length - 2].withdrawBlock\n            );\n            return;\n        }\n        require(msg.sender == dogCore.cooAddress() || msg.sender == owner);\n\n        CVariation storage currentCVariation = cV", "debug": "storage_4: 0xffff000000000000000000000000000000000000000000000000000000000001\nstorage_2 +\n62514009886607029107290561805838585334079798074568712924583230797734656856467 +\n4*storage_4: 0x1\nstorage_1 +\n62514009886607029107290561805838585334079798074568712924583230797734656856467 +\n4*storage_4: 0x100000001f00000000000000212000000000000000000000000000000000001f\nblock_number: 0x0\nstorage_3 +\n62514009886607029107290561805838585334079798074568712924583230797734656856471 +\n4*storage_4: 0x1\ncalldata_Variation_0: 0x675f6d1e00000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `callBackVariations()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Hello_Dog-5.sol", "function": "callBackVariations()", "lineno": 157, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2573, "code": "               cVariations[cVariations.length - 2].totalAmount, \n                cVariations[cVariations.length - 2].withdrawBlock\n            );\n            return;\n        }\n        require(msg.sender == dogCore.cooAddress() || msg.sender == owner);\n\n        CVariation storage currentCVariation = cV", "debug": "storage_4: 0xffffffc000000000000000000000000000000000000000000000000000000000\nstorage_2 +\n62514009886607029107290561805838585334079798074568712924583230797734656856467 +\n4*storage_4: 0x1\nstorage_1 +\n62514009886607029107290561805838585334079798074568712924583230797734656856467 +\n4*storage_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nblock_number: 0x0\nstorage_3 +\n62514009886607029107290561805838585334079798074568712924583230797734656856471 +\n4*storage_4: 0x1\ncalldata_Variation_0: 0x675f6d1e00000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `callBackVariations()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Hello_Dog-5.sol", "function": "callBackVariations()", "lineno": 157, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2819, "code": "ithdrawBlock = block", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/Hello_Dog-5.sol", "function": "callBackVariations()", "lineno": 165, "title": "Message call to external contract", "type": "Informational"}, {"address": 2819, "code": "ithdrawBlock = block", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3171\nCall at address: 3171\n", "filename": "/temp/Hello_Dog-5.sol", "function": "callBackVariations()", "lineno": 165, "title": "Multiple Calls", "type": "Information"}, {"address": 3033, "code": ") - spoolAmount) * 3 / 100;\n        require(lu", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/Hello_Dog-5.sol", "function": "callBackVariations()", "lineno": 167, "title": "State change after external call", "type": "Warning"}, {"address": 3171, "code": "ion.totalAmount = luc", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/Hello_Dog-5.sol", "function": "callBackVariations()", "lineno": 169, "title": "Message call to external contract", "type": "Informational"}, {"address": 3171, "code": "ion.totalAmount = luc", "debug": "", "description": "A possible transaction order independence vulnerability exists in function callBackVariations(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/Hello_Dog-5.sol", "function": "callBackVariations()", "lineno": 169, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6480, "code": "Supply : 20000;\n  ", "debug": "storage_1: 0xff3717ddf147ba7fd6976a72ee859c9c251431c6dd4346e384e0fd941c87b69c\ncalldata_Variation_4: 0xde9aa0007ffff9dbbb05d00001000207fffdffbfffbfbfbfffbfbfefbfbff7f6\nstorage_0: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_Variation_0: 0x7b039bb600000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createVariation(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Hello_Dog-5.sol", "function": "createVariation(uint256,uint256)", "lineno": 138, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6525, "code": "uire(msg.sender == address(dogC", "debug": "storage_5: 0x93fc208e0ab61bce794ade523080f88202ca8feff0bb01b620a01bc2008756bf\ncalldata_Variation_32 + 4: 0x4e1f\nstorage_0: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_Variation_0: 0x7b039bb600000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createVariation(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Hello_Dog-5.sol", "function": "createVariation(uint256,uint256)", "lineno": 143, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6534, "code": "wner) public {\n        require(msg.sender == address(dogCo", "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x0\ncalldata_Variation_32 + 4: 0x4e1f\nstorage_0: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_Variation_0: 0x7b039bb600000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/Hello_Dog-5.sol", "function": "createVariation(uint256,uint256)", "lineno": 142, "title": "Exception state", "type": "Informational"}, {"address": 6913, "code": "rs, uint256 totalAmount, uint25", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Variation_4: 0x0\nstorage_4: 0x0\ncalldata_Variation_0: 0xf99efb6f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/Hello_Dog-5.sol", "function": "_function_0xf99efb6f", "lineno": 96, "title": "Exception state", "type": "Informational"}, {"address": 6996, "code": "riation {\n        \n       ", "debug": "keccac_timestamp: 0xff3717ddf147ba7fd6976a72ee859c9c251431c6dd4346e384e0fd941c87b69c\nblock_number: 0xde9aa0007ffff9dbbb05d00001000207fffdffbfffbfbfbfffbfbfefbfbff7f6\nstorage_0: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_Variation_0: 0x7b039bb600000000000000000000000000000000000000000000000000000000\ncalldatasize_Variation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createVariation(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/Hello_Dog-5.sol", "function": "createVariation(uint256,uint256)", "lineno": 83, "title": "Integer Overflow ", "type": "Warning"}], "success": true}
