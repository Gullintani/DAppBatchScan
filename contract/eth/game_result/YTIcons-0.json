{"error": null, "issues": [{"address": 3535, "code": " true;\n    }\n\n ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_YTIcons_4: 0x0\nstorage_11: 0x0\nstorage_10: 0x0\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_YTIcons_0: 0x869b30200000000000000000000000000000000000000000000000000000000\ncalldatasize_YTIcons: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/YTIcons-0.sol", "function": "setBeneficiaryAddress(uint256,address)", "lineno": 275, "title": "Exception state", "type": "Informational"}, {"address": 3689, "code": "er != _to);\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_YTIcons_32 + 4: 0x0\nstorage_11: 0x0\ncalldata_YTIcons_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_YTIcons: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/YTIcons-0.sol", "function": "approve(address,uint256)", "lineno": 150, "title": "Exception state", "type": "Informational"}, {"address": 4614, "code": " FUNCTIONS -- O", "debug": "The exception is triggered under the following conditions:\n\ncalldata_YTIcons_32 + 36: 0x0\nstorage_11: 0x0\ncalldata_YTIcons_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_YTIcons: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/YTIcons-0.sol", "function": "transferFrom(address,address,uint256)", "lineno": 210, "title": "Exception state", "type": "Informational"}, {"address": 6336, "code": "int256 balance ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_YTIcons_4: 0x0\nstorage_11: 0x0\nstorage_10: 0x0\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_YTIcons_0: 0x6198e33900000000000000000000000000000000000000000000000000000000\ncalldatasize_YTIcons: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/YTIcons-0.sol", "function": "unlock(uint256)", "lineno": 290, "title": "Exception state", "type": "Informational"}, {"address": 7650, "code": "sNotNull(_benef", "debug": "The exception is triggered under the following conditions:\n\ncalldata_YTIcons_4: 0x0\nstorage_11: 0x0\ncalldata_YTIcons_0: 0x9188d31200000000000000000000000000000000000000000000000000000000\ncalldatasize_YTIcons: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/YTIcons-0.sol", "function": "getCard(uint256)", "lineno": 327, "title": "Exception state", "type": "Informational"}, {"address": 12885, "code": "roved ownership exchange", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_YTIcons_32_+_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YTIcons_32 + 36: 0x0\ncalldata_YTIcons_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_calldata_YTIcons_32_+_36: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_YTIcons_4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_2 +\n660301456019777184113296434797620819555017468543624515662331739614079884729 +\n3*calldata_YTIcons_32 + 36: 0x0\nstorage_11: 0x1\ncalldata_YTIcons_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_YTIcons: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/YTIcons-0.sol", "function": "transferFrom(address,address,uint256)", "lineno": 191, "title": "Integer Overflow ", "type": "Warning"}], "success": true}
