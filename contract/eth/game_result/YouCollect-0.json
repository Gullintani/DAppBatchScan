{"error": null, "issues": [{"address": 1200, "code": "OO {\n    ycc = InterfaceYCC(yccContract);\n    yct = InterfaceContentCreatorUniverse(yctContract);\n    ycm = InterfaceMining(ycmContract);\n    youCollectContracts[yccContract] = true;\n    youCollectContracts[yctContract] = true;\n    youCollectContracts[ycmContract] = true;\n    for (uint16 index = 0; index < otherContracts.length; index++) {\n      youCollectContracts[otherContracts[index]] = true;\n    }\n  }\n  function setYccContractAddress(address yccContract) public onlyCOO {\n    ycc = InterfaceYCC(yccContract);\n    youCollectContracts[yccContract] = true;\n ", "debug": "calldata_YouCollectBase_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_YouCollectBase_0: 0xb4c5c98300000000000000000000000000000000000000000000000000000000\ncalldatasize_YouCollectBase: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setMainYouCollectContractAddresses(address,address,address,address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/YouCollect-0.sol", "function": "setMainYouCollectContractAddresses(address,address,address,address[])", "lineno": 146, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4681, "code": "unction in one call\n// ------------------------------------------", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/YouCollect-0.sol", "function": "transferAnyERC20Token(address,uint256)", "lineno": 214, "title": "Message call to external contract", "type": "Warning"}, {"address": 5231, "code": "tally sent ERC20 tokens\n  /", "debug": "", "description": "A possible transaction order independence vulnerability exists in function payout(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/YouCollect-0.sol", "function": "payout(address,uint256)", "lineno": 206, "title": "Transaction order dependence", "type": "Warning"}], "success": true}
