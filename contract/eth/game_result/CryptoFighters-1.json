{"error": null, "issues": [{"address": 2064, "code": " auction (in seconds).\n    /// @para", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SaleClockAuction_4: 0x4\ncalldata_SaleClockAuction_0: 0x484eccb400000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/CryptoFighters-1.sol", "function": "_function_0x484eccb4", "lineno": 495, "title": "Exception state", "type": "Informational"}, {"address": 4061, "code": "Returns true if the transfer succeeds.\n    /// @param _r", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/CryptoFighters-1.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 151, "title": "Message call to external contract", "type": "Informational"}, {"address": 4206, "code": "(_auction.endingPrice),\n            u", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/CryptoFighters-1.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 173, "title": "State change after external call", "type": "Warning"}, {"address": 4269, "code": "(_auction.endingPrice),\n            u", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/CryptoFighters-1.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 173, "title": "State change after external call", "type": "Warning"}, {"address": 4332, "code": "(_auction.endingPrice),\n            u", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/CryptoFighters-1.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 173, "title": "State change after external call", "type": "Warning"}, {"address": 4379, "code": "(_auction.endingPrice),\n            u", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/CryptoFighters-1.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 173, "title": "State change after external call", "type": "Warning"}, {"address": 4426, "code": "(_auction.endingPrice),\n            u", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/CryptoFighters-1.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 173, "title": "State change after external call", "type": "Warning"}], "success": true}
