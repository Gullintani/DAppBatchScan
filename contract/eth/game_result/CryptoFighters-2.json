{"error": null, "issues": [{"address": 2119, "code": "@param _seller - Seller, if not the ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SaleClockAuction_4: 0x4\ncalldata_SaleClockAuction_0: 0x484eccb400000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/CryptoFighters-2.sol", "function": "_function_0x484eccb4", "lineno": 527, "title": "Exception state", "type": "Informational"}, {"address": 3995, "code": "s an NFT owned by this contract to another address.\n    ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/CryptoFighters-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 90, "title": "Message call to external contract", "type": "Informational"}, {"address": 4140, "code": "uint256(_auction.startingPrice),\n    ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/CryptoFighters-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 112, "title": "State change after external call", "type": "Warning"}, {"address": 4203, "code": "uint256(_auction.startingPrice),\n    ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/CryptoFighters-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 112, "title": "State change after external call", "type": "Warning"}, {"address": 4266, "code": "uint256(_auction.startingPrice),\n    ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/CryptoFighters-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 112, "title": "State change after external call", "type": "Warning"}, {"address": 4313, "code": "uint256(_auction.startingPrice),\n    ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/CryptoFighters-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 112, "title": "State change after external call", "type": "Warning"}, {"address": 4360, "code": "uint256(_auction.startingPrice),\n    ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/CryptoFighters-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 112, "title": "State change after external call", "type": "Warning"}], "success": true}
