{"error": null, "issues": [{"address": 2123, "code": "rimp[msg.sender]==0);\n        ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getFreeShrimp(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/SnailFarm-0.sol", "function": "getFreeShrimp()", "lineno": 97, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5422, "code": "funct", "debug": "storage_3: 0xbf4391d9f26459bc7c09e36be232e9b20e3533f635a224965939d4b3fc06ea73\ncalldata_ShrimpFarmer_4: 0x1bff590ff1532f6334f205231486489b600800e0a3d490a29cf7bf7304ebeef9\ncalldata_ShrimpFarmer_0: 0x229824c400000000000000000000000000000000000000000000000000000000\ncalldatasize_ShrimpFarmer: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `calculateTrade(uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/SnailFarm-0.sol", "function": "calculateTrade(uint256,uint256,uint256)", "lineno": 139, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5527, "code": "eturns (uint25", "debug": "The exception is triggered under the following conditions:\n\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncallvalue: 0x1\nstorage_4: 0xff00\ncalldata_ShrimpFarmer_0: 0x4f74acfe00000000000000000000000000000000000000000000000000000000\ncalldatasize_ShrimpFarmer: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/SnailFarm-0.sol", "function": "buyEggs()", "lineno": 157, "title": "Exception state", "type": "Informational"}], "success": true}
