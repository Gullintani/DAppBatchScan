{"error": null, "issues": [{"address": 779, "code": "erAddress;\n   ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WorldCryptoCup_4: 0x0\nstorage_2: 0x0\ncalldata_WorldCryptoCup_0: 0x8e0f1b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCryptoCup: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/WorldCryptoCup-0.sol", "function": "fallback", "lineno": 80, "title": "Exception state", "type": "Informational"}, {"address": 1025, "code": "n overflow. =>", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WorldCryptoCup_4: 0x0\nstorage_2: 0x0\ncalldata_WorldCryptoCup_0: 0xc8135a700000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCryptoCup: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/WorldCryptoCup-0.sol", "function": "getTeamOwner(uint256)", "lineno": 95, "title": "Exception state", "type": "Informational"}, {"address": 1100, "code": "Paused == false);", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WorldCryptoCup_4: 0x0\nstorage_2: 0x0\ncalldata_WorldCryptoCup_0: 0x20dfcd2700000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCryptoCup: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/WorldCryptoCup-0.sol", "function": "purchaseCountry(uint256)", "lineno": 43, "title": "Exception state", "type": "Informational"}, {"address": 1310, "code": "nOwner);\n\n\t\t// Transfer the 5% commission to the develop", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1415\n", "filename": "/temp/WorldCryptoCup-0.sol", "function": "purchaseCountry(uint256)", "lineno": 50, "title": "Multiple Calls", "type": "Information"}, {"address": 1896, "code": ";\n\ncontract WorldC", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WorldCryptoCup_0: 0x2e99df8400000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCryptoCup: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `InitiateTeams()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/WorldCryptoCup-0.sol", "function": "InitiateTeams()", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2199, "code": ";\n\ncontract WorldC", "debug": "storage_2: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nkeccac_0_+\n29102676481673041902632991033461445430619272659676223336789171408008386403022_+\n3*storage_2: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_0 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n3*storage_2: 0xe3b040314880e20364224e890f47bffedff7b777fffffffffffffffffffff50\nstorage_3: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WorldCryptoCup_0: 0x2e99df8400000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCryptoCup: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `InitiateTeams()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/WorldCryptoCup-0.sol", "function": "InitiateTeams()", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 11564, "code": " of a specific", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WorldCryptoCup_4: 0x0\nstorage_2: 0x0\ncalldata_WorldCryptoCup_0: 0x789533e900000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCryptoCup: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/WorldCryptoCup-0.sol", "function": "getTeamPrice(uint256)", "lineno": 89, "title": "Exception state", "type": "Informational"}, {"address": 11665, "code": "e < teams[_tea", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WorldCryptoCup_4: 0x0\nstorage_2: 0x0\ncalldata_WorldCryptoCup_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WorldCryptoCup_0: 0xc37b0aa700000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCryptoCup: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/WorldCryptoCup-0.sol", "function": "modifyPriceCountry(uint256,uint256)", "lineno": 67, "title": "Exception state", "type": "Informational"}, {"address": 11981, "code": " numb", "debug": "storage_2 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n3*calldata_WorldCryptoCup_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_WorldCryptoCup_4: 0x0\nretval_1415: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1310: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\nstorage_2: 0x1\ncalldata_WorldCryptoCup_0: 0x20dfcd2700000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCryptoCup: 0x4\ncallvalue: 0x8000000000000000000000000000000000000000000000000000000000000000\n", "description": "A possible integer overflow exists in the function `purchaseCountry(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/WorldCryptoCup-0.sol", "function": "purchaseCountry(uint256)", "lineno": 107, "title": "Integer Overflow ", "type": "Warning"}, {"address": 12055, "code": "ntract WorldCryptoCup {\n\n\taddress ceoAddress = 0x46d9112533ef677059c430E515775e358888e38b;\n    address cfoAddress = 0x23a49A9930f5b562c6B1096C3e6b5BEc133E8B2E;\n\n\tstruct Team {\n\t\tstring name;\n\t\taddress ownerAddress;\n\t\tuint256 curPrice;\n\t}\n\tTeam[] teams;\n\n\tmodifier onlyCeo() {\n        require (msg.sender == ceoAddress);\n        _;\n    }\n\n    bool teamsAreInitiated;\n    bool isPaused;\n    \n    /*\n    We use the following functions to pause and unpause the game.\n    */\n    function pauseGame() public onlyCeo {\n        isPaused = true;\n    }\n    function unPauseGame() public onlyCeo {\n        isPaused = false;\n    }\n    function GetIsPauded() public view returns(bool) {\n       return(isPaused);\n    }\n\n    /*\n    This function allows players to purchase countries from other players. \n    The price is automatically multiplied by 2 after each purchase.\n    Players can purchase multiple coutries\n    */\n\tfunction purchaseCountry(uint _countryId) public payable {\n\t\trequire(msg.value == teams[_countryId].curPrice);\n\t\trequire(isPaused == false);\n\n\t\t// Calculate the 5% value\n\t\tuint256 commission5percent = ((msg.value / 10)/2);\n\n\t\t// Calculate the owner commission on this sale & transfer the commission to the owner.\t\t\n\t\tuint256 commissionOwner = msg.value - commission5percent; // => 95%\n\t\tteams[_countryId].ownerAddress.transfer(commissionOwner);\n\n\t\t// Transfer the 5% commission to the developer\n\t\tcfoAddress.transfer(commission5percent); // => 5% (25% remains in the Jackpot)\t\t\t\t\t\t\n\n\t\t// Update the team owner and set the new price\n\t\tteams[_countryId].ownerAddress = msg.sender;\n\t\tteams[_countryId].curPrice = mul(teams[_countryId].curPrice, 2);\n\t}\n\t\n\t/*\n\tThis function can be used by the owner of a team to modify the price of its team.\n\tHe can make the price smaller than the current price but never bigger.\n\t*/\n\tfunction modifyPriceCountry(uint _teamId, uint256 _newPrice) public {\n\t    require(_newPrice > 0);\n\t    require(teams[_teamId].ownerAddress == msg.sender);\n\t    require(_newPrice < teams[_teamId].curPrice);\n\t    teams[_teamId].curPrice = _newPrice;\n\t}\n\t\n\t// This function will return all of the details of our teams\n\tfunction getTeam(uint _teamId) public view returns (\n        string name,\n        address ownerAddress,\n        uint256 curPrice\n    ) {\n        Team storage _team = teams[_teamId];\n\n        name = _team.name;\n        ownerAddress = _team.ownerAddress;\n        curPrice = _team.curPrice;\n    }\n    \n    // This function will return only the price of a specific team\n    function getTeamPrice(uint _teamId) public view returns(uint256) {\n        return(teams[_teamId].curPrice);\n    }\n    \n    // This function will return only the addess of a specific team\n    function getTeamOwner(uint _teamId) public view returns(address) {\n        return(teams[_teamId].ownerAddress);\n    }\n    \n    /**\n    @dev Multiplies two numbers, throws on overflow. => From the SafeMath library\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n          return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    @dev Integer division of two numbers, truncating the quotient. => From the SafeMath library\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n\t// We run this function once to create all the teams and set the initial price.\n\tfunction InitiateTeams() public onlyCeo {\n\t\trequire(teamsAreInitiated == false);\n        teams.push(Team(\"Brazil\", cfoAddress, 700000000000000000)); \n        teams.push(Team(\"Russia\", cfoAddress, 195000000000000000)); \n        teams.push(Team(\"Saudi Arabia\", cfoAddress, 15000000000000000)); \n        teams.push(Team(\"Egypt\", cfoAddress, 60000000000000000)); \n        teams.push(Team(\"Portugal\", cfoAddress, 350000000000000000)); \n        teams.push(Team(\"Spain\", cfoAddress, 650000000000000000)); \n        teams.push(Team(\"Iran\", cfoAddress, 30000000000000000)); \n        teams.push(Team(\"Germany\", cfoAddress, 750000000000000000)); \n        teams.push(Team(\"Mexico\", cfoAddress, 125000000000000000)); \n        teams.push(Team(\"Sweden\", cfoAddress, 95000000000000000)); \n        teams.push(Team(\"South Korea\", cfoAddress, 30000000000000000)); \n        teams.push(Team(\"France\", cfoAddress, 750000000000000000)); \n        teams.push(Team(\"Australia\", cfoAddress, 40000000000000000)); \n        teams.push(Team(\"Peru\", cfoAddress, 60000000000000000)); \n        teams.push(Team(\"Denmark\", cfoAddress, 95000000000000000)); \n        teams.push(Team(\"Belgium\", cfoAddress, 400000000000000000)); \n        teams.push(Team(\"Panama\", cfoAddress, 25000000000000000)); \n        teams.push(Team(\"Tunisia\", cfoAddress, 30000000000000000)); \n        teams.push(Team(\"England\", cfoAddress, 500000000000000000)); \n        teams.push(Team(\"Argentina\", cfoAddress, 650000000000000000)); \n        teams.push(Team(\"Iceland\", cfoAddress, 75000000000000000)); \n        teams.push(Team(\"Croatia\", cfoAddress, 125000000000000000)); \n        teams.push(Team(\"Nigeria\", cfoAddress, 75000000000000000)); \n        teams.push(Team(\"Poland\", cfoAddress, 125000000000000000)); \n        teams.push(Team(\"Senegal\", cfoAddress, 70000000000000000)); \n        teams.push(Team(\"Colombia\", cfoAddress, 195000000000000000)); \n        teams.push(Team(\"Japan\", cfoAddress, 70000000000000000)); \n        teams.push(Team(\"Uruguay\", cfoAddress, 225000000000000000));\n        teams.push(Team(\"Morocco\", cfoAddress, 50000000000000000));\n        teams.push(Team(\"Switzerland\", cfoAddress, 125000000000000000));\n        teams.push(Team(\"Costa Rica\", cfoAddress, 50000000000000000));\n        teams.push(Team(\"Serbia\", cfoAddress, 75000000000000000));\n\t}\n}", "debug": "keccac_0_+\n29102676481673041902632991033461445430619272659676223336789171408008386403022_+\n3*storage_2: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_0 +\n29102676481673041902632991033461445430619272659676223336789171408008386403022 +\n3*storage_2: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nstorage_3: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_WorldCryptoCup_0: 0x2e99df8400000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldCryptoCup: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `InitiateTeams()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/WorldCryptoCup-0.sol", "function": "InitiateTeams()", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}
