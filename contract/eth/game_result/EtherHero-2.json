{"error": null, "issues": [{"address": 233, "code": "s[acc][idx];\n        obj.m_Expire = cd+now;\n        obj.m_Chips = chips;\n    }\n\n    function CollectChips(address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers", "debug": "calldata_ProductionBoiler_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 150, "title": "Integer Overflow ", "type": "Warning"}, {"address": 239, "code": "s[acc][idx];\n        obj.m_Expire = cd+now;\n        obj.m_Chips = chips;\n    }\n\n    function CollectChips(address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers", "debug": "calldata_ProductionBoiler_32 + 68: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 150, "title": "Integer Overflow ", "type": "Warning"}, {"address": 474, "code": "_Expire,obj.m_Chips);\n    }\n\n}", "debug": "storage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_ProductionBoiler_0: 0x58fe54a100000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GetBoilerInfo(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "GetBoilerInfo(address,uint256)", "lineno": 165, "title": "Integer Overflow ", "type": "Warning"}, {"address": 872, "code": "x];\n        chips = obj.m_Chips;\n        delete g_Boilers[acc][idx];\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        retur", "debug": "keccac_keccac_calldata_ProductionBoiler_32_+_4_+_1: 0xf12610f183792e267720b625000e179f04b940482850638fbcae4806b5061515\nstorage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_calldata_ProductionBoiler_32_+_4 + 1: 0xc3e10d803424431089e3d12ae0b1e4e01d47fffffffffffffffffffffffffff9\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0xd147204600000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `CollectChips(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "CollectChips(address,uint256)", "lineno": 157, "title": "Integer Overflow ", "type": "Warning"}, {"address": 991, "code": "(!g_Synced);\n        g_Synced = true;\n        for (uint i=0; i<accounts.length; i++)\n        {\n            address acc = accounts[i];\n            for (uint idx=0; idx<3; idx++)\n            {\n                (uint expire, uint32[] memory chips) = oldBoiler.GetBoilerInfo(acc,idx);\n                if (expire == 0) continue;\n                g_Boilers[acc][idx].m_Expire = expire;\n                g_Boilers[acc][idx].m_Chips = chips;\n            }\n        }\n    }\n\n    //=========================================================================\n    function IsBoilerValid(address acc, uint id", "debug": "calldata_ProductionBoiler_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ProductionBoiler_0: 0xdb14ee0300000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0xdb14ee03`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "_function_0xdb14ee03", "lineno": 117, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1108, "code": "  require", "debug": "", "description": "Function GenerateChips(address,uint256,uint256,uint32[]) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/temp/EtherHero-2.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 73, "title": "Use of tx.origin", "type": "Warning"}, {"address": 1250, "code": "    {\n", "debug": "calldata_ProductionBoiler_32 + 36: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x57f25cd000000000000000000000000000000000000000000000000000000000\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 156, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1547, "debug": "storage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_ProductionBoiler_0: 0x58fe54a100000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GetBoilerInfo(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "GetBoilerInfo(address,uint256)", "lineno": 168, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1549, "debug": "storage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_ProductionBoiler_0: 0x58fe54a100000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GetBoilerInfo(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "GetBoilerInfo(address,uint256)", "lineno": 168, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1803, "code": "SetAuth(a", "debug": "", "description": "Function SetAuth(address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/temp/EtherHero-2.sol", "function": "SetAuth(address)", "lineno": 83, "title": "Use of tx.origin", "type": "Warning"}, {"address": 2071, "code": "SetAuth(a", "debug": "", "description": "Function ClearAuth(address) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/temp/EtherHero-2.sol", "function": "ClearAuth(address)", "lineno": 83, "title": "Use of tx.origin", "type": "Warning"}, {"address": 2368, "code": "  require", "debug": "", "description": "Function CollectChips(address,uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/temp/EtherHero-2.sol", "function": "CollectChips(address,uint256)", "lineno": 73, "title": "Use of tx.origin", "type": "Warning"}, {"address": 2551, "code": "\n        Boiler sto", "debug": "storage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0xd147204600000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `CollectChips(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "CollectChips(address,uint256)", "lineno": 163, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2553, "code": "\n        Boiler sto", "debug": "storage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0xd147204600000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `CollectChips(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "CollectChips(address,uint256)", "lineno": 163, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3146, "code": " expire;\n                g_Boile", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/EtherHero-2.sol", "function": "_function_0xdb14ee03", "lineno": 126, "title": "Message call to external contract", "type": "Warning"}, {"address": 3564, "code": "2[] m_Chips;\n    }\n\n    mapping(address => mapping(uint => Boiler)) g_Boilers;\n\n    bool g_Synced = false;\n    function SyncOldData(OldProductionBoiler oldBoiler, address[] accounts) external CreatorAble\n    {\n        require(!g_Synced);\n        g_Synced = true;\n        for (uint i=0; i<accounts.length; i++)\n        {\n            address acc = accounts[i];\n            for (uint idx=0; idx<3; idx++)\n            {\n                (uint expire, uint32[] memory chips) = oldBoiler.GetBoilerInfo(acc,idx);\n                if (expire == 0) continue;\n                g_Boilers[acc][idx].m_Expire = expire;\n                g_Boilers[acc][idx].m_Chips = chips;\n            }\n        }\n    }\n\n    //=========================================================================\n    function IsBoilerValid(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        if (obj.m_Chips.length > 0) return false;\n        return true;\n    }\n\n    function IsBoilerExpire(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return obj.m_Expire <= now;\n    }\n\n    //=========================================================================\n\n    function GenerateChips(address acc, uint idx, uint cd, uint32[] chips) external AuthAble OwnerAble(acc)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        obj.m_Expire = cd+now;\n        obj.m_Chips = chips;\n    }\n\n    function CollectChips(address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        chips = obj.m_Chips;\n        delete g_Boilers[acc][idx];\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return (obj.m_Expire,obj.m_Chips);\n    }\n\n}", "debug": "storage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 109, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3570, "code": "2[] m_Chips;\n    }\n\n    mapping(address => mapping(uint => Boiler)) g_Boilers;\n\n    bool g_Synced = false;\n    function SyncOldData(OldProductionBoiler oldBoiler, address[] accounts) external CreatorAble\n    {\n        require(!g_Synced);\n        g_Synced = true;\n        for (uint i=0; i<accounts.length; i++)\n        {\n            address acc = accounts[i];\n            for (uint idx=0; idx<3; idx++)\n            {\n                (uint expire, uint32[] memory chips) = oldBoiler.GetBoilerInfo(acc,idx);\n                if (expire == 0) continue;\n                g_Boilers[acc][idx].m_Expire = expire;\n                g_Boilers[acc][idx].m_Chips = chips;\n            }\n        }\n    }\n\n    //=========================================================================\n    function IsBoilerValid(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        if (obj.m_Chips.length > 0) return false;\n        return true;\n    }\n\n    function IsBoilerExpire(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return obj.m_Expire <= now;\n    }\n\n    //=========================================================================\n\n    function GenerateChips(address acc, uint idx, uint cd, uint32[] chips) external AuthAble OwnerAble(acc)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        obj.m_Expire = cd+now;\n        obj.m_Chips = chips;\n    }\n\n    function CollectChips(address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        chips = obj.m_Chips;\n        delete g_Boilers[acc][idx];\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return (obj.m_Expire,obj.m_Chips);\n    }\n\n}", "debug": "keccac_1_+_keccac_calldata_ProductionBoiler_32_+_4: 0xfc86bad100d50b52800f6efd1234d4050f57c97082400704da31e108a9179b67\nstorage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x8688d62877349a8cdb427f083e32bb3afe9fc8f4dbbf9fb719efed749d3c8b41\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 109, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3581, "code": "2[] m_Chips;\n    }\n\n    mapping(address => mapping(uint => Boiler)) g_Boilers;\n\n    bool g_Synced = false;\n    function SyncOldData(OldProductionBoiler oldBoiler, address[] accounts) external CreatorAble\n    {\n        require(!g_Synced);\n        g_Synced = true;\n        for (uint i=0; i<accounts.length; i++)\n        {\n            address acc = accounts[i];\n            for (uint idx=0; idx<3; idx++)\n            {\n                (uint expire, uint32[] memory chips) = oldBoiler.GetBoilerInfo(acc,idx);\n                if (expire == 0) continue;\n                g_Boilers[acc][idx].m_Expire = expire;\n                g_Boilers[acc][idx].m_Chips = chips;\n            }\n        }\n    }\n\n    //=========================================================================\n    function IsBoilerValid(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        if (obj.m_Chips.length > 0) return false;\n        return true;\n    }\n\n    function IsBoilerExpire(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return obj.m_Expire <= now;\n    }\n\n    //=========================================================================\n\n    function GenerateChips(address acc, uint idx, uint cd, uint32[] chips) external AuthAble OwnerAble(acc)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        obj.m_Expire = cd+now;\n        obj.m_Chips = chips;\n    }\n\n    function CollectChips(address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        chips = obj.m_Chips;\n        delete g_Boilers[acc][idx];\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return (obj.m_Expire,obj.m_Chips);\n    }\n\n}", "debug": "calldata_ProductionBoiler_4 + calldata_ProductionBoiler_32 + 68: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 109, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3583, "code": "2[] m_Chips;\n    }\n\n    mapping(address => mapping(uint => Boiler)) g_Boilers;\n\n    bool g_Synced = false;\n    function SyncOldData(OldProductionBoiler oldBoiler, address[] accounts) external CreatorAble\n    {\n        require(!g_Synced);\n        g_Synced = true;\n        for (uint i=0; i<accounts.length; i++)\n        {\n            address acc = accounts[i];\n            for (uint idx=0; idx<3; idx++)\n            {\n                (uint expire, uint32[] memory chips) = oldBoiler.GetBoilerInfo(acc,idx);\n                if (expire == 0) continue;\n                g_Boilers[acc][idx].m_Expire = expire;\n                g_Boilers[acc][idx].m_Chips = chips;\n            }\n        }\n    }\n\n    //=========================================================================\n    function IsBoilerValid(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        if (obj.m_Chips.length > 0) return false;\n        return true;\n    }\n\n    function IsBoilerExpire(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return obj.m_Expire <= now;\n    }\n\n    //=========================================================================\n\n    function GenerateChips(address acc, uint idx, uint cd, uint32[] chips) external AuthAble OwnerAble(acc)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        obj.m_Expire = cd+now;\n        obj.m_Chips = chips;\n    }\n\n    function CollectChips(address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        chips = obj.m_Chips;\n        delete g_Boilers[acc][idx];\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return (obj.m_Expire,obj.m_Chips);\n    }\n\n}", "debug": "calldata_ProductionBoiler_4 + calldata_ProductionBoiler_32 + 68: 0x7ffffffffffffcb76b8d0f83fb8ffef7fffffdfffffffffd11cdb5dffffffff\ncalldata_ProductionBoiler_32 + 68: 0x670c96825de4b7e4babe61c100020000000001dc64945ffffffffc\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0x616ae0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `GenerateChips(address,uint256,uint256,uint32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "GenerateChips(address,uint256,uint256,uint32[])", "lineno": 109, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3737, "code": "2[] m_Chips;\n    }\n\n    mapping(address => mapping(uint => Boiler)) g_Boilers;\n\n    bool g_Synced = false;\n    function SyncOldData(OldProductionBoiler oldBoiler, address[] accounts) external CreatorAble\n    {\n        require(!g_Synced);\n        g_Synced = true;\n        for (uint i=0; i<accounts.length; i++)\n        {\n            address acc = accounts[i];\n            for (uint idx=0; idx<3; idx++)\n            {\n                (uint expire, uint32[] memory chips) = oldBoiler.GetBoilerInfo(acc,idx);\n                if (expire == 0) continue;\n                g_Boilers[acc][idx].m_Expire = expire;\n                g_Boilers[acc][idx].m_Chips = chips;\n            }\n        }\n    }\n\n    //=========================================================================\n    function IsBoilerValid(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        if (obj.m_Chips.length > 0) return false;\n        return true;\n    }\n\n    function IsBoilerExpire(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return obj.m_Expire <= now;\n    }\n\n    //=========================================================================\n\n    function GenerateChips(address acc, uint idx, uint cd, uint32[] chips) external AuthAble OwnerAble(acc)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        obj.m_Expire = cd+now;\n        obj.m_Chips = chips;\n    }\n\n    function CollectChips(address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        chips = obj.m_Chips;\n        delete g_Boilers[acc][idx];\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return (obj.m_Expire,obj.m_Chips);\n    }\n\n}", "debug": "storage_keccac_calldata_ProductionBoiler_32_+_4 + 1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9\nstorage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x1\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0xd147204600000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `CollectChips(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "CollectChips(address,uint256)", "lineno": 109, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3753, "code": "2[] m_Chips;\n    }\n\n    mapping(address => mapping(uint => Boiler)) g_Boilers;\n\n    bool g_Synced = false;\n    function SyncOldData(OldProductionBoiler oldBoiler, address[] accounts) external CreatorAble\n    {\n        require(!g_Synced);\n        g_Synced = true;\n        for (uint i=0; i<accounts.length; i++)\n        {\n            address acc = accounts[i];\n            for (uint idx=0; idx<3; idx++)\n            {\n                (uint expire, uint32[] memory chips) = oldBoiler.GetBoilerInfo(acc,idx);\n                if (expire == 0) continue;\n                g_Boilers[acc][idx].m_Expire = expire;\n                g_Boilers[acc][idx].m_Chips = chips;\n            }\n        }\n    }\n\n    //=========================================================================\n    function IsBoilerValid(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        if (obj.m_Chips.length > 0) return false;\n        return true;\n    }\n\n    function IsBoilerExpire(address acc, uint idx) external view returns(bool)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return obj.m_Expire <= now;\n    }\n\n    //=========================================================================\n\n    function GenerateChips(address acc, uint idx, uint cd, uint32[] chips) external AuthAble OwnerAble(acc)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        obj.m_Expire = cd+now;\n        obj.m_Chips = chips;\n    }\n\n    function CollectChips(address acc, uint idx) external AuthAble OwnerAble(acc) returns(uint32[] chips)\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        chips = obj.m_Chips;\n        delete g_Boilers[acc][idx];\n    }\n\n    function GetBoilerInfo(address acc, uint idx) external view returns(uint, uint32[])\n    {\n        Boiler storage obj = g_Boilers[acc][idx];\n        return (obj.m_Expire,obj.m_Chips);\n    }\n\n}", "debug": "keccac_keccac_calldata_ProductionBoiler_32_+_4_+_1: 0xfa03968daedf517fe9c1d3bbb7fc8508ce4c4ceabae4683305c4c224f95c9bfb\nstorage_1 + keccac_calldata_ProductionBoiler_32_+_4: 0x1000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_calldata_ProductionBoiler_32_+_4 + 1: 0x90dcb5934265136ca894819027e7ab976afb6f5596a34d17a587bc20c2fec811\norigin: 0x0\ncalldata_ProductionBoiler_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_ProductionBoiler_0: 0xd147204600000000000000000000000000000000000000000000000000000000\ncalldatasize_ProductionBoiler: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `CollectChips(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherHero-2.sol", "function": "CollectChips(address,uint256)", "lineno": 109, "title": "Integer Overflow ", "type": "Warning"}], "success": true}
