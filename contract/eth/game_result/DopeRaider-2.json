{"error": null, "issues": [{"address": 1662, "code": "6 _tokenId,\n        uint256 _startin", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/DopeRaider-2.sol", "function": "configureSaleClockAuction(address,uint256)", "lineno": 540, "title": "Message call to external contract", "type": "Warning"}, {"address": 1793, "code": "    uint256 _endingPrice,\n        uint2", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/DopeRaider-2.sol", "function": "configureSaleClockAuction(address,uint256)", "lineno": 542, "title": "State change after external call", "type": "Warning"}, {"address": 2574, "code": "(in wei) at beginning of auction.\n  ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SaleClockAuction_4: 0x4\ncalldata_SaleClockAuction_0: 0x484eccb400000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/DopeRaider-2.sol", "function": "_function_0x484eccb4", "lineno": 535, "title": "Exception state", "type": "Informational"}, {"address": 2860, "code": "ce and ending price (in seconds).", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawBalance(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/DopeRaider-2.sol", "function": "withdrawBalance()", "lineno": 401, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4455, "code": "an NFT owned by this contract to another address.\n    //", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/DopeRaider-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 92, "title": "Message call to external contract", "type": "Informational"}, {"address": 4455, "code": "an NFT owned by this contract to another address.\n    //", "debug": "", "description": "A possible transaction order independence vulnerability exists in function createAuction(uint256,uint256,uint256,uint256,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/DopeRaider-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 92, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4600, "code": "nt256(_auction.startingPrice),\n      ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/DopeRaider-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 114, "title": "State change after external call", "type": "Warning"}, {"address": 4663, "code": "nt256(_auction.startingPrice),\n      ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/DopeRaider-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 114, "title": "State change after external call", "type": "Warning"}, {"address": 4726, "code": "nt256(_auction.startingPrice),\n      ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/DopeRaider-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 114, "title": "State change after external call", "type": "Warning"}, {"address": 4773, "code": "nt256(_auction.startingPrice),\n      ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/DopeRaider-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 114, "title": "State change after external call", "type": "Warning"}, {"address": 4820, "code": "nt256(_auction.startingPrice),\n      ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/temp/DopeRaider-2.sol", "function": "createAuction(uint256,uint256,uint256,uint256,address)", "lineno": 114, "title": "State change after external call", "type": "Warning"}], "success": true}
