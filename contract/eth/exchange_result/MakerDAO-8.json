{"error": null, "issues": [{"address": 2140, "code": "s32 val;\n        b", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "lockAndDraw(address,uint256)", "lineno": 191, "title": "Message call to external contract", "type": "Warning"}, {"address": 2140, "code": "s32 val;\n        b", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2264\n", "filename": "/temp/MakerDAO-8.sol", "function": "lockAndDraw(address,uint256)", "lineno": 191, "title": "Multiple Calls", "type": "Information"}, {"address": 2264, "code": " (val, ok", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "lockAndDraw(address,uint256)", "lineno": 193, "title": "Message call to external contract", "type": "Warning"}, {"address": 2264, "code": " (val, ok", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2485\n", "filename": "/temp/MakerDAO-8.sol", "function": "lockAndDraw(address,bytes32,uint256)", "lineno": 193, "title": "Multiple Calls", "type": "Information"}, {"address": 2485, "code": " (val, ok) = tub.pep().peek();\n    ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/MakerDAO-8.sol", "function": "lockAndDraw(address,bytes32,uint256)", "lineno": 193, "title": "Message call to external contract", "type": "Informational"}, {"address": 2796, "code": "(address proxy, bytes32 cup) {\n        proxy = Prox", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "createAndOpen(address,address)", "lineno": 291, "title": "Message call to external contract", "type": "Warning"}, {"address": 2796, "code": "(address proxy, bytes32 cup) {\n        proxy = Prox", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3039\nCall at address: 6550\n", "filename": "/temp/MakerDAO-8.sol", "function": "createAndOpen(address,address)", "lineno": 291, "title": "Multiple Calls", "type": "Information"}, {"address": 3039, "code": "g.sender);\n        cup = open(tub_)", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "createAndOpen(address,address)", "lineno": 292, "title": "Message call to external contract", "type": "Warning"}, {"address": 3202, "code": "function cre", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "shut(address,bytes32,address)", "lineno": 284, "title": "Message call to external contract", "type": "Warning"}, {"address": 3202, "code": "function cre", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3361\n", "filename": "/temp/MakerDAO-8.sol", "function": "shut(address,bytes32,address)", "lineno": 284, "title": "Multiple Calls", "type": "Information"}, {"address": 3361, "code": "eAndOpen(", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "shut(address,bytes32,address)", "lineno": 284, "title": "Message call to external contract", "type": "Warning"}, {"address": 3871, "code": "sai().app", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "wipeAndFree(address,bytes32,uint256,uint256)", "lineno": 217, "title": "Message call to external contract", "type": "Warning"}, {"address": 3871, "code": "sai().app", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4334\nCall at address: 4144\n", "filename": "/temp/MakerDAO-8.sol", "function": "wipe(address,bytes32,uint256)", "lineno": 217, "title": "Multiple Calls", "type": "Information"}, {"address": 4144, "code": "sai().approve(tub, uint(-1));\n            }\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/MakerDAO-8.sol", "function": "wipe(address,bytes32,uint256)", "lineno": 217, "title": "Message call to external contract", "type": "Informational"}, {"address": 4144, "code": "sai().approve(tub, uint(-1));\n            }\n ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4334\n", "filename": "/temp/MakerDAO-8.sol", "function": "wipe(address,bytes32,uint256)", "lineno": 217, "title": "Multiple Calls", "type": "Information"}, {"address": 4334, "code": " uint(-1)) {", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "wipe(address,bytes32,uint256)", "lineno": 219, "title": "Message call to external contract", "type": "Warning"}, {"address": 4334, "code": " uint(-1)) {", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4512\n", "filename": "/temp/MakerDAO-8.sol", "function": "wipe(address,bytes32,uint256,address)", "lineno": 219, "title": "Multiple Calls", "type": "Information"}, {"address": 4512, "code": "            ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "wipe(address,bytes32,uint256,address)", "lineno": 220, "title": "Message call to external contract", "type": "Warning"}, {"address": 6550, "code": "function lock(address tub", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "createOpenAndLock(address,address)", "lineno": 163, "title": "Message call to external contract", "type": "Warning"}, {"address": 6550, "code": "function lock(address tub", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3039\n", "filename": "/temp/MakerDAO-8.sol", "function": "createAndOpen(address,address)", "lineno": 163, "title": "Multiple Calls", "type": "Information"}, {"address": 6748, "code": "_);\n        ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "shut(address,bytes32)", "lineno": 272, "title": "Message call to external contract", "type": "Warning"}, {"address": 6748, "code": "_);\n        ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6907\n", "filename": "/temp/MakerDAO-8.sol", "function": "shut(address,bytes32)", "lineno": 272, "title": "Multiple Calls", "type": "Information"}, {"address": 6907, "code": "b.shut(cu", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "shut(address,bytes32)", "lineno": 273, "title": "Message call to external contract", "type": "Warning"}, {"address": 7417, "code": "  tub.gem", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "lock(address,bytes32)", "lineno": 171, "title": "Message call to external contract", "type": "Warning"}, {"address": 7417, "code": "  tub.gem", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7704\nCall at address: 7575\n", "filename": "/temp/MakerDAO-8.sol", "function": "lock(address,bytes32)", "lineno": 171, "title": "Multiple Calls", "type": "Information"}, {"address": 7575, "code": "  tub.gem().approve(tub, uint(-1));\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/MakerDAO-8.sol", "function": "lock(address,bytes32)", "lineno": 171, "title": "Message call to external contract", "type": "Informational"}, {"address": 7575, "code": "  tub.gem().approve(tub, uint(-1));\n", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7704\n", "filename": "/temp/MakerDAO-8.sol", "function": "lock(address,bytes32)", "lineno": 171, "title": "Multiple Calls", "type": "Information"}, {"address": 7704, "code": "         ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "lock(address,bytes32)", "lineno": 175, "title": "Message call to external contract", "type": "Warning"}, {"address": 9905, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "createOpenLockAndDraw(address,address,uint256)", "lineno": 305, "title": "Message call to external contract", "type": "Warning"}, {"address": 9905, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6550\n", "filename": "/temp/MakerDAO-8.sol", "function": "createOpenLockAndDraw(address,address,uint256)", "lineno": 305, "title": "Multiple Calls", "type": "Information"}, {"address": 10362, "code": "ub = TubInterface(tub_);\n\n       ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "give(address,bytes32,address)", "lineno": 165, "title": "Message call to external contract", "type": "Warning"}, {"address": 10549, "code": "ss tub_, uint wad) public payable returns (address ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "createOpenAndLock(address,address)", "lineno": 299, "title": "Message call to external contract", "type": "Warning"}, {"address": 10549, "code": "ss tub_, uint wad) public payable returns (address ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6550\n", "filename": "/temp/MakerDAO-8.sol", "function": "createOpenAndLock(address,address)", "lineno": 299, "title": "Multiple Calls", "type": "Information"}, {"address": 10952, "code": ";\n       ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/temp/MakerDAO-8.sol", "function": "free(address,bytes32,uint256)", "lineno": 239, "title": "Message call to external contract", "type": "Warning"}], "success": true}
