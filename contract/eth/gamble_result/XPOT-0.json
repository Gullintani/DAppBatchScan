{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/temp/XPOT-0.sol:9:5: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use \"constructor(...) { ... }\" to define it.\n    function Owner(address _owner) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/temp/XPOT-0.sol:66:5: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use \"constructor(...) { ... }\" to define it.\n    function XPOT(\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/temp/XPOT-0.sol:1:1: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.5.11;\"\ncontract Owner {\r\n^ (Relevant source part starts here and spans across multiple lines).\n/temp/XPOT-0.sol:9:5: Warning: This declaration shadows an existing declaration.\n    function Owner(address _owner) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/temp/XPOT-0.sol:1:1: The shadowed declaration is here:\ncontract Owner {\r\n^ (Relevant source part starts here and spans across multiple lines).\n/temp/XPOT-0.sol:66:5: Warning: This declaration shadows an existing declaration.\n    function XPOT(\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/temp/XPOT-0.sol:19:1: The shadowed declaration is here:\ncontract XPOT is Owner {\r\n^ (Relevant source part starts here and spans across multiple lines).\n/temp/XPOT-0.sol:75:5: Error: Fallback function must be defined as \"external\".\n    function() public payable {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/temp/XPOT-0.sol:69:13: Error: Referenced declaration is neither modifier nor base class.\n     public Owner(msg.sender)\r\n            ^---------------^\n/temp/XPOT-0.sol:162:13: Error: Invalid type for argument in function call. Invalid implicit conversion from uint256 to bytes memory requested. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.\n            time * \r\n            ^ (Relevant source part starts here and spans across multiple lines).\n/temp/XPOT-0.sol:168:38: Error: Invalid type for argument in function call. Invalid implicit conversion from uint256 to bytes memory requested. This function requires a single bytes argument. Use abi.encodePacked(...) to obtain the pre-0.5.0 behaviour or abi.encode(...) to use ABI encoding.\n        uint result = uint(keccak256(random))%(min+max)-min;\r\n                                     ^----^\n/temp/XPOT-0.sol:233:13: Error: \"send\" and \"transfer\" are only available for objects of type \"address payable\", not \"address\".\n            players[game][0].transfer(jackpot[game]);\r\n            ^-----------------------^\n", "issues": []}
