{"error": null, "issues": [{"address": 1868, "code": "ners;\n    address[2] pub", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TurntableDSG_4: 0x2\ncalldata_TurntableDSG_0: 0x25e7c2700000000000000000000000000000000000000000000000000000000\ncalldatasize_TurntableDSG: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/DSG-0.sol", "function": "_function_0x025e7c27", "lineno": 21, "title": "Exception state", "type": "Informational"}, {"address": 2379, "code": "didates;\n    bool public pau", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TurntableDSG_4: 0x2\ncalldata_TurntableDSG_0: 0x3477ee2e00000000000000000000000000000000000000000000000000000000\ncalldatasize_TurntableDSG: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/DSG-0.sol", "function": "_function_0x3477ee2e", "lineno": 22, "title": "Exception state", "type": "Informational"}, {"address": 4531, "code": "       uint25", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TurntableDSG_32 + 4: 0x2\nstorage_11: 0x0\nstorage_10: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_TurntableDSG_0: 0x6c9740c100000000000000000000000000000000000000000000000000000000\ncalldatasize_TurntableDSG: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/DSG-0.sol", "function": "transferOwnership(address,uint8)", "lineno": 253, "title": "Exception state", "type": "Informational"}], "success": true}
