{"error": null, "issues": [{"address": 1423, "code": "];\n    }\n    ret", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FourOutOfFive_4: 0x0\nstorage_0: 0x0\ncalldata_FourOutOfFive_0: 0x69069eca00000000000000000000000000000000000000000000000000000000\ncalldatasize_FourOutOfFive: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/4OutOf5-0.sol", "function": "_getGroupRewardedParticipants(uint256)", "lineno": 199, "title": "Exception state", "type": "Informational"}, {"address": 1742, "debug": "The exception is triggered under the following conditions:\n\ncalldata_FourOutOfFive_4: 0x0\nstorage_0: 0x0\ncalldata_FourOutOfFive_0: 0x76d35b7700000000000000000000000000000000000000000000000000000000\ncalldatasize_FourOutOfFive: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/4OutOf5-0.sol", "function": "_getGroupComplete(uint256)", "lineno": 221, "title": "Exception state", "type": "Informational"}, {"address": 1796, "code": "(uint _groupId) ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FourOutOfFive_4: 0x0\nstorage_0: 0x0\ncalldata_FourOutOfFive_0: 0x78c7e9cf00000000000000000000000000000000000000000000000000000000\ncalldatasize_FourOutOfFive: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/4OutOf5-0.sol", "function": "_getGroupRewardSize(uint256)", "lineno": 216, "title": "Exception state", "type": "Informational"}, {"address": 2113, "code": "Bet = _minBet;\n    maxBet = _maxBet", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawOwnerMaxPossibleSafe(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/temp/4OutOf5-0.sol", "function": "withdrawOwnerMaxPossibleSafe()", "lineno": 158, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2170, "code": " reward found.\")", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FourOutOfFive_4: 0x0\nstorage_0: 0x0\ncalldata_FourOutOfFive_0: 0xae169a5000000000000000000000000000000000000000000000000000000000\ncalldatasize_FourOutOfFive: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/4OutOf5-0.sol", "function": "claimReward(uint256)", "lineno": 120, "title": "Exception state", "type": "Informational"}, {"address": 3689, "code": "icipants;\n  }\n\n ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FourOutOfFive_4: 0x0\nstorage_0: 0x0\ncalldata_FourOutOfFive_0: 0xce45648f00000000000000000000000000000000000000000000000000000000\ncalldatasize_FourOutOfFive: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/4OutOf5-0.sol", "function": "_getGroupParticipants(uint256)", "lineno": 193, "title": "Exception state", "type": "Informational"}, {"address": 4008, "debug": "The exception is triggered under the following conditions:\n\ncalldata_FourOutOfFive_4: 0x0\nstorage_0: 0x0\ncalldata_FourOutOfFive_0: 0xdc59025600000000000000000000000000000000000000000000000000000000\ncalldatasize_FourOutOfFive: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/4OutOf5-0.sol", "function": "_getGroupRewardsAvailable(uint256)", "lineno": 221, "title": "Exception state", "type": "Informational"}], "success": true}
