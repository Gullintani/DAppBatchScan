{"error": null, "issues": [{"address": 3827, "code": "in the round \n   * Not use Safe", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EtherLottery-1.sol", "function": "getEarnings(address)", "lineno": 617, "title": "Message call to external contract", "type": "Informational"}, {"address": 3827, "code": "in the round \n   * Not use Safe", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4243\n", "filename": "/temp/EtherLottery-1.sol", "function": "getEarnings(address)", "lineno": 617, "title": "Multiple Calls", "type": "Information"}, {"address": 4243, "code": "ent / bonuses_[begin].currentTota", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EtherLottery-1.sol", "function": "getEarnings(address)", "lineno": 626, "title": "Message call to external contract", "type": "Informational"}, {"address": 4736, "code": "s(user, bonusRo", "debug": "callvalue: 0x804001e3f00060000\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YHToken_0: 0x2f65be5400000000000000000000000000000000000000000000000000000000\ncalldatasize_YHToken: 0x4\n", "description": "A possible integer overflow exists in the function `transferBonusEarnings()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherLottery-1.sol", "function": "transferBonusEarnings()", "lineno": 607, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5360, "code": "o);\n    return true;\n  } \n\n  ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_YHToken_32 + 4: 0x0\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_YHToken_4: 0x0\ncalldata_YHToken_0: 0x42a92d3600000000000000000000000000000000000000000000000000000000\ncalldatasize_YHToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/EtherLottery-1.sol", "function": "getBalanceSnapshot(address,uint256)", "lineno": 520, "title": "Exception state", "type": "Informational"}, {"address": 6390, "code": " = users_[to].extraEarnings.add(m", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EtherLottery-1.sol", "function": "balanceOf(address)", "lineno": 571, "title": "Message call to external contract", "type": "Informational"}, {"address": 9489, "code": "title", "debug": "callvalue: 0xcc0383130a306821210\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_YHToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffaffb29d25698022013f\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_YHToken_0: 0x795b14d00000000000000000000000000000000000000000000000000000000\ncalldatasize_YHToken: 0x4\n", "description": "A possible integer overflow exists in the function `transferExtraEarnings(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/temp/EtherLottery-1.sol", "function": "transferExtraEarnings(address)", "lineno": 64, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9502, "code": "asic\n * @dev S", "debug": "The exception is triggered under the following conditions:\n\nretval_3827: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_YHToken_4: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\nreturndatasize: 0x40\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YHToken_0: 0x131b9c0400000000000000000000000000000000000000000000000000000000\ncalldatasize_YHToken: 0x4\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_YHToken_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/EtherLottery-1.sol", "function": "getEarnings(address)", "lineno": 64, "title": "Exception state", "type": "Informational"}, {"address": 9562, "code": "addr];\n        us", "debug": "The exception is triggered under the following conditions:\n\nstorage_3 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_10049: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_YHToken_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_YHToken: 0x4\nstorage_2 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/temp/EtherLottery-1.sol", "function": "withdraw()", "lineno": 660, "title": "Exception state", "type": "Informational"}, {"address": 10049, "code": "token for a specified address\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EtherLottery-1.sol", "function": "burn(uint256)", "lineno": 511, "title": "Message call to external contract", "type": "Informational"}, {"address": 10049, "code": "token for a specified address\n ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 11576\n", "filename": "/temp/EtherLottery-1.sol", "function": "withdraw()", "lineno": 511, "title": "Multiple Calls", "type": "Information"}, {"address": 11576, "code": "  if (extraEarnings >= value) {\n   ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/temp/EtherLottery-1.sol", "function": "withdraw()", "lineno": 688, "title": "Message call to external contract", "type": "Informational"}], "success": true}
